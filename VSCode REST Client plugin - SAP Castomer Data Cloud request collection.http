@cdc-api-key = 3_hXJvDx1eFcp8VgSUBw77h4hFrfV6er-197aceXyUuuEeybn5FjJA5xxt9SnWntcZ
@cdc-dc = {{cdc-dc-us}}

# @name groups_search
POST https://accounts.{{cdc-dc}}/accounts.groups.search
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

query=select * from groups where groupId contains "662692"
&model=ClinicModel

###

# @name groups_setGroupInfo
POST https://accounts.{{cdc-dc}}/accounts.groups.setGroupInfo
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

groupID=662692
&model=ClinicModel
&groupData={
  approvedEmails: ["test@test.com", "test1@test.com"]
}

###

# @name getJWT
POST https://accounts.{{cdc-dc}}/accounts.getJWT
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

targetUID=7a95c29726a94e89bf9f68fd4aeb77e7
&expiration=8640000

###

# @name groups_setSiteConfig
POST https://accounts.{{cdc-dc}}/accounts.groups.setSiteConfig
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

invitationPageUrl=https://cp-gaa-dev-hillsgroup.uk.r.appspot.com/invite

###

# @name notifyLogin
POST https://accounts.{{cdc-dc}}/accounts.notifyLogin
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

siteUID=7a95c29726a94e89bf9f68fd4aeb77e7
&sessionExpiration=8640000

###

# @name RBA_getPolicy
POST https://accounts.{{cdc-dc}}/accounts.rba.getPolicy
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

###

# @name RBA_setPolicy
POST https://accounts.{{cdc-dc}}/accounts.rba.setPolicy
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

policy={
    "commonRules": [
      {
        "action": {
          "authLevel": 0,
          "challenge": "none",
          "type": "allow"
        },
        "rootFactor": {
          "type": "IP",
          "ranges": [
            "204.141.110.0/24",
            "204.141.104.0/25",
            "204.141.132.0/24",
            "204.141.136.0/24",
            "24.54.179.2/255.255.255.0",
            "98.188.92.128/25",
            "4.26.160.208/29",
            "4.4.183.0/26"
          ],
          "inclusive": true
        },
        "id": "allow IPs",
        "scope": "Login",
        "description": null,
        "enabled": false
      },
      {
        "action": {
          "duration": 300,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "failedLogins",
              "scope": [
                "IP"
              ],
              "threshold": 25,
              "resetInterval": 300
            },
            {
              "type": "IP",
              "ranges": [
                "208.78.8.0/22",
                "209.87.128.0/20",
                "204.141.128.0/24",
                "204.141.158.0/24"
              ],
              "inclusive": false
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_cq8gb4Hf8GGuakl_33NvzxluA5PV87eb2r44uIh4eJASElvLJtEg1Cw6kX7SXEvR"
              ],
              "inclusive": true
            }
          ],
          "type": "all"
        },
        "id": null,
        "scope": "Login",
        "description": "On multiple failed login attempts > lockout IP (GPD - Neulion / ES)",
        "enabled": false
      },
      {
        "action": {
          "duration": 300,
          "scope": [
            "account"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "type": "failedLogins",
          "scope": [
            "account"
          ],
          "threshold": 10,
          "resetInterval": 300
        },
        "id": null,
        "scope": "Login",
        "description": " On multiple failed login attempts > lockout account",
        "enabled": true
      },
      {
        "action": {
          "duration": 3600,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "IPRatio",
              "scope": [
                "IP"
              ],
              "threshold": 450,
              "ratio": 0.99,
              "resetInterval": 900
            },
            {
              "type": "IP",
              "ranges": [
                "204.141.128.0/24",
                "204.141.158.0/24"
              ],
              "inclusive": false
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_vKnJn-q2bLxCkMABr7sGTcq82OUOdHGwOdN632FWV45HfesWxX-2-YhUrPVJySD7",
                "3_QElaX5W_8GVqhaxPTDuTwjgXaztBcH9YBpy_tBpEdU-8lbKv_YukDxM4DagpEiSd"
              ],
              "inclusive": false
            }
          ],
          "type": "all"
        },
        "id": null,
        "scope": "Login",
        "description": "On X percentage of failed login attempts > lockout IP (ALL except: Intel, Patron)",
        "enabled": true
      },
      {
        "action": {
          "duration": 300,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "failedLogins",
              "scope": [
                "IP"
              ],
              "threshold": 250,
              "resetInterval": 300
            },
            {
              "type": "IP",
              "ranges": [
                "204.141.128.0/24",
                "204.141.158.0/24"
              ],
              "inclusive": false
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_vKnJn-q2bLxCkMABr7sGTcq82OUOdHGwOdN632FWV45HfesWxX-2-YhUrPVJySD7",
                "3_QElaX5W_8GVqhaxPTDuTwjgXaztBcH9YBpy_tBpEdU-8lbKv_YukDxM4DagpEiSd"
              ],
              "inclusive": false
            }
          ],
          "type": "all"
        },
        "id": null,
        "scope": "Login",
        "description": " On multiple failed login attempts > lockout IP (ALL except: Intel, Patron)",
        "enabled": true
      },
      {
        "action": {
          "duration": 300,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "failedLogins",
              "scope": [
                "IP"
              ],
              "threshold": 250,
              "resetInterval": 300
            },
            {
              "type": "IP",
              "ranges": [
                "44.226.221.216",
                "44.232.174.38",
                "44.233.77.61",
                "44.226.39.175",
                "54.203.48.147",
                "54.189.188.180",
                "54.212.32.144",
                "54.70.225.171",
                "44.225.255.212",
                "52.42.250.150",
                "44.239.144.206",
                "44.239.69.136",
                "54.190.135.163",
                "44.233.158.199",
                "52.12.252.17",
                "52.42.250.150",
                "44.239.144.206",
                "44.239.69.136"
              ],
              "inclusive": false
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_vKnJn-q2bLxCkMABr7sGTcq82OUOdHGwOdN632FWV45HfesWxX-2-YhUrPVJySD7"
              ],
              "inclusive": true
            }
          ],
          "type": "all"
        },
        "id": null,
        "scope": "Login",
        "description": " On multiple failed login attempts > lockout IP (Intel)",
        "enabled": true
      },
      {
        "action": {
          "duration": 3600,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "IPRatio",
              "scope": [
                "IP"
              ],
              "threshold": 450,
              "ratio": 0.99,
              "resetInterval": 900
            },
            {
              "type": "IP",
              "ranges": [
                "44.226.221.216",
                "44.232.174.38",
                "44.233.77.61",
                "44.226.39.175",
                "54.203.48.147",
                "54.189.188.180",
                "54.212.32.144",
                "54.70.225.171",
                "44.225.255.212",
                "52.42.250.150",
                "44.239.144.206",
                "44.239.69.136",
                "54.190.135.163",
                "44.233.158.199",
                "52.12.252.17",
                "52.42.250.150",
                "44.239.144.206",
                "44.239.69.136"
              ],
              "inclusive": false
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_vKnJn-q2bLxCkMABr7sGTcq82OUOdHGwOdN632FWV45HfesWxX-2-YhUrPVJySD7"
              ],
              "inclusive": true
            }
          ],
          "type": "all"
        },
        "id": null,
        "scope": "Login",
        "description": "On X percentage of failed login attempts > lockout IP (Intel)",
        "enabled": true
      },
      {
        "action": {
          "duration": 86400,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "IPRatio",
              "scope": [
                "IP"
              ],
              "threshold": 50,
              "ratio": 0.9,
              "resetInterval": 300
            },
            {
              "type": "IP",
              "ranges": [
                "40.69.216.38",
                "40.69.216.42",
                "40.69.217.31",
                "40.69.216.66",
                "13.95.149.245",
                "13.95.144.211",
                "13.95.148.210",
                "13.95.144.114",
                "13.81.104.39",
                "13.81.106.179",
                "13.81.111.104",
                "13.81.111.169",
                "52.169.191.202",
                "52.169.191.210",
                "52.169.191.148",
                "52.169.191.108",
                "188.65.0.0/21",
                "90.187.6.233/32",
                "185.120.60.0/22",
                "87.128.18.58",
                "212.185.161.120/29",
                "216.218.131.46",
                "52.138.218.121",
                "52.169.253.71",
                "52.169.254.242",
                "52.178.128.159",
                "52.178.128.215",
                "52.178.130.248",
                "52.178.132.217",
                "52.178.139.88",
                "52.166.67.186",
                "52.174.41.85",
                "52.174.47.52",
                "52.178.42.82",
                "52.178.45.235",
                "52.232.26.228",
                "52.233.182.204"
              ],
              "inclusive": false
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_EH6cZ6gBJgl94hXqcCex1M71QN8eHd9G-3a5wKNqPihlX1-WTim-URKv0vym4xKp"
              ],
              "inclusive": true
            }
          ],
          "type": "all"
        },
        "id": null,
        "scope": "Login",
        "description": "On X percentage of failed login attempts > lockout IP (GPI - D3)",
        "enabled": false
      },
      {
        "action": {
          "duration": 86400,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "IPRatio",
              "scope": [
                "IP"
              ],
              "threshold": 50,
              "ratio": 0.9,
              "resetInterval": 300
            },
            {
              "type": "IP",
              "ranges": [
                "208.78.8.0/22",
                "209.87.128.0/20"
              ],
              "inclusive": false
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_cq8gb4Hf8GGuakl_33NvzxluA5PV87eb2r44uIh4eJASElvLJtEg1Cw6kX7SXEvR"
              ],
              "inclusive": true
            }
          ],
          "type": "all"
        },
        "id": null,
        "scope": "Login",
        "description": "On X percentage of failed login attempts > lockout IP (GPD - Neulion / ES)",
        "enabled": false
      },
      {
        "action": {
          "duration": 300,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "failedLogins",
              "scope": [
                "IP"
              ],
              "threshold": 250,
              "resetInterval": 300
            },
            {
              "type": "IP",
              "ranges": [
                "18.204.87.103",
                "35.175.97.159",
                "54.87.236.160"
              ],
              "inclusive": false
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_QElaX5W_8GVqhaxPTDuTwjgXaztBcH9YBpy_tBpEdU-8lbKv_YukDxM4DagpEiSd"
              ],
              "inclusive": true
            }
          ],
          "type": "all"
        },
        "id": null,
        "scope": "Login",
        "description": " On multiple failed login attempts > lockout IP (Patron)",
        "enabled": true
      },
      {
        "action": {
          "duration": 3600,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "IPRatio",
              "scope": [
                "IP"
              ],
              "threshold": 450,
              "ratio": 0.99,
              "resetInterval": 900
            },
            {
              "type": "IP",
              "ranges": [
                "18.204.87.103",
                "35.175.97.159",
                "54.87.236.160"
              ],
              "inclusive": false
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_QElaX5W_8GVqhaxPTDuTwjgXaztBcH9YBpy_tBpEdU-8lbKv_YukDxM4DagpEiSd"
              ],
              "inclusive": true
            }
          ],
          "type": "all"
        },
        "id": null,
        "scope": "Login",
        "description": "On X percentage of failed login attempts > lockout IP (Patron)",
        "enabled": true
      },
      {
        "action": {
          "scope": [
            "account"
          ],
          "type": "captcha"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "highRisk",
              "scope": [
                "IP",
                "account"
              ],
              "threshold": 0.8
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_EH6cZ6gBJgl94hXqcCex1M71QN8eHd9G-3a5wKNqPihlX1-WTim-URKv0vym4xKp"
              ],
              "inclusive": true
            }
          ],
          "type": "all"
        },
        "id": "High Risk",
        "scope": "Login",
        "description": "On high risk score > Force CAPTCHA on account",
        "enabled": true
      },
      {
        "action": {
          "duration": 602,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "IP",
              "ranges": [
                "204.141.158.0/24",
                "204.141.128.0/24",
                "52.233.182.204",
                "52.232.26.228",
                "52.178.45.235",
                "52.178.42.82",
                "52.174.47.52",
                "52.174.41.85",
                "52.166.67.186",
                "52.178.139.88",
                "52.178.132.217",
                "52.178.130.248",
                "52.178.128.215",
                "52.178.128.159",
                "52.169.254.242",
                "52.169.253.71",
                "52.138.218.121",
                "216.218.131.46",
                "212.185.161.120/29",
                "87.128.18.58",
                "185.120.60.0/22",
                "90.187.6.233/32",
                "188.65.0.0/21",
                "52.169.191.108",
                "52.169.191.148",
                "52.169.191.210",
                "52.169.191.202",
                "13.81.111.169",
                "13.81.111.104",
                "13.81.106.179",
                "13.81.104.39",
                "13.95.144.114",
                "13.95.148.210",
                "13.95.144.211",
                "13.95.149.245",
                "40.69.216.66",
                "40.69.217.31",
                "40.69.216.42",
                "40.69.216.38"
              ],
              "inclusive": false
            },
            {
              "type": "failedLogins",
              "scope": [
                "IP"
              ],
              "threshold": 12,
              "resetInterval": 300
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_EH6cZ6gBJgl94hXqcCex1M71QN8eHd9G-3a5wKNqPihlX1-WTim-URKv0vym4xKp"
              ],
              "inclusive": true
            }
          ],
          "type": "all"
        },
        "id": "On multiple failed login attempts > lockout IP (GPI - D3)",
        "scope": "Login",
        "description": "On multiple failed login attempts > lockout IP (GPI - D3)",
        "enabled": true
      },
      {
        "action": {
          "duration": 602,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "IP",
              "ranges": [
                "45.199.141.0/24",
                "40.69.216.38",
                "40.69.216.42",
                "40.69.217.31",
                "40.69.216.66",
                "13.95.149.245",
                "13.95.144.211",
                "13.95.148.210",
                "13.95.144.114",
                "13.81.104.39",
                "13.81.106.179",
                "13.81.111.104",
                "13.81.111.169",
                "52.169.191.202",
                "52.169.191.210",
                "52.169.191.148",
                "52.169.191.108",
                "188.65.0.0/21",
                "90.187.6.233/32",
                "185.120.60.0/22",
                "87.128.18.58",
                "212.185.161.120/29",
                "216.218.131.46",
                "52.138.218.121",
                "52.169.253.71",
                "52.169.254.242",
                "52.178.128.159",
                "52.178.128.215",
                "52.178.130.248",
                "52.178.132.217",
                "52.178.139.88",
                "52.166.67.186",
                "52.174.41.85",
                "52.174.47.52",
                "52.178.42.82",
                "52.178.45.235",
                "52.232.26.228",
                "52.233.182.204",
                "208.78.8.0/22",
                "209.87.128.0/20",
                "204.141.128.0/24",
                "204.141.158.0/24",
                "37.49.227.23"
              ],
              "inclusive": false
            },
            {
              "type": "failedLogins",
              "scope": [
                "IP"
              ],
              "threshold": 12,
              "resetInterval": 1800
            }
          ],
          "type": "all"
        },
        "id": "Multiple Failed Login Attempts > Lockout IP (NFL ALL)",
        "scope": "Login",
        "description": "On multiple failed login attempts > lockout IP (NFL All)",
        "enabled": true
      },
      {
        "action": {
          "duration": 600,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "highRisk",
              "scope": [
                "IP",
                "account"
              ],
              "threshold": 0.8
            },
            {
              "type": "apiKey",
              "apiKeys": [
                "3_EH6cZ6gBJgl94hXqcCex1M71QN8eHd9G-3a5wKNqPihlX1-WTim-URKv0vym4xKp"
              ],
              "inclusive": true
            }
          ],
          "type": "all"
        },
        "id": "HIGH RISK (IP Block Variant)",
        "scope": "Login",
        "description": "",
        "enabled": true
      },
      {
        "action": {
          "duration": 300,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "apiKey",
              "apiKeys": [
                "3_EH6cZ6gBJgl94hXqcCex1M71QN8eHd9G-3a5wKNqPihlX1-WTim-URKv0vym4xKp",
                "3_JuHa5qkVIfY_KsNk1TuudSQT5Nif4axD-QXug1OgBmAgVieKA56umYvWPnoursaC"
              ],
              "inclusive": true
            },
            {
              "type": "IPRatio",
              "scope": [
                "IP"
              ],
              "threshold": 10,
              "ratio": 0.9,
              "resetInterval": 300
            }
          ],
          "type": "all"
        },
        "id": "SAP Monitoring Automatic IP Lockout - 5 minutes",
        "scope": "Login",
        "description": "on 90 percent failure rate of min 10 login attempts",
        "enabled": true
      },
      {
        "action": {
          "duration": 900,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "apiKey",
              "apiKeys": [
                "3_EH6cZ6gBJgl94hXqcCex1M71QN8eHd9G-3a5wKNqPihlX1-WTim-URKv0vym4xKp",
                "3_JuHa5qkVIfY_KsNk1TuudSQT5Nif4axD-QXug1OgBmAgVieKA56umYvWPnoursaC"
              ],
              "inclusive": true
            },
            {
              "type": "IPRatio",
              "scope": [
                "IP"
              ],
              "threshold": 50,
              "ratio": 0.9,
              "resetInterval": 900
            }
          ],
          "type": "all"
        },
        "id": "SAP Monitoring Automatic IP Lockout - 15 minutes",
        "scope": "Login",
        "description": "on 90 percent failure rate of min 50 login attempts",
        "enabled": true
      },
      {
        "action": {
          "duration": 3600,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "apiKey",
              "apiKeys": [
                "3_EH6cZ6gBJgl94hXqcCex1M71QN8eHd9G-3a5wKNqPihlX1-WTim-URKv0vym4xKp",
                "3_JuHa5qkVIfY_KsNk1TuudSQT5Nif4axD-QXug1OgBmAgVieKA56umYvWPnoursaC"
              ],
              "inclusive": true
            },
            {
              "type": "IPRatio",
              "scope": [
                "IP"
              ],
              "threshold": 100,
              "ratio": 0.95,
              "resetInterval": 3600
            }
          ],
          "type": "all"
        },
        "id": "SAP Monitoring Automatic IP Lockout - 1 hour",
        "scope": "Login",
        "description": "on 95 percent failure rate of min 100 login attempts.",
        "enabled": true
      },
      {
        "action": {
          "duration": 10800,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "apiKey",
              "apiKeys": [
                "3_EH6cZ6gBJgl94hXqcCex1M71QN8eHd9G-3a5wKNqPihlX1-WTim-URKv0vym4xKp",
                "3_JuHa5qkVIfY_KsNk1TuudSQT5Nif4axD-QXug1OgBmAgVieKA56umYvWPnoursaC"
              ],
              "inclusive": true
            },
            {
              "type": "IPRatio",
              "scope": [
                "IP"
              ],
              "threshold": 500,
              "ratio": 0.95,
              "resetInterval": 10800
            }
          ],
          "type": "all"
        },
        "id": "SAP Monitoring Automatic IP Lockout - 3 hours",
        "scope": "Login",
        "description": "on 95 percent failure rate of min 500 login attempts.",
        "enabled": true
      },
      {
        "action": {
          "duration": 86400,
          "scope": [
            "IP"
          ],
          "type": "lockout"
        },
        "rootFactor": {
          "factors": [
            {
              "type": "apiKey",
              "apiKeys": [
                "3_EH6cZ6gBJgl94hXqcCex1M71QN8eHd9G-3a5wKNqPihlX1-WTim-URKv0vym4xKp",
                "3_JuHa5qkVIfY_KsNk1TuudSQT5Nif4axD-QXug1OgBmAgVieKA56umYvWPnoursaC"
              ],
              "inclusive": true
            },
            {
              "type": "IPRatio",
              "scope": [
                "IP"
              ],
              "threshold": 1000,
              "ratio": 0.99,
              "resetInterval": 86400
            }
          ],
          "type": "all"
        },
        "id": "SAP Monitoring Automatic IP Lockout - 1 day",
        "scope": "Login",
        "description": "on 99 percent failure rate of min 1000 login attempts.",
        "enabled": true
      }
    ],
    "rulesSets": [
      {
        "rules": [],
        "id": "_off",
        "description": "This policy represents a policy without any validations",
        "enabled": true
      }
    ],
    "tfaRegistrationScope": false,
    "defaultPolicy": "_off",
    "allowOverrideMode": "no"
  }

###

# @name reports_getAccountsStats
POST https://audit.{{cdc-dc}}/reports.getAccountsStats
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

startDate=2022-06-01
&endDate=2023-01-01
&dimensions=date
&measures=siteLogins

###

# @name audit_search
POST https://audit.{{cdc-dc}}/audit.search
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

query=select * from auditLog where endpoint='accounts.resetPassword' limit 10

###

# @name importLiteAccount
POST https://accounts.{{cdc-dc}}/accounts.importLiteAccount
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

profile={
    "email": "test@test.com",
    "firstName": "First",
    "lastName": "Last"
}
&preferences={
    "terms": {
        "tc": {
			"isConsentGranted": true,
			"lastConsentModified": "2022-12-01"
		}
    }
}

###

# @name accounts_search
POST https://accounts.{{cdc-dc}}/accounts.search
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

query=SELECT * FROM accounts WHERE UID='c80ae99bac084bb384f1494fb4dfc8bc'

###

# @name tfa_getProviders
POST https://accounts.{{cdc-dc}}/accounts.tfa.getProviders
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=49a97a6b2b0845118d02dbbd3db6c711

###

# @name groups_getSchema
POST https://accounts.{{cdc-dc}}/accounts.groups.getSchema
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

model=ClinicModel

###

# @name groups_setSchema
POST https://accounts.{{cdc-dc}}/accounts.groups.setSchema
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

model=ClinicModel
&relationshipDataSchema={
  "role": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "status": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "permissions": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "nickname": {
    "type": "string",
    "writeAccess": "clientModify",
    "required": false
  }
}
&groupDataSchema={
  "streetAddress": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  },
  "billTo": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "softClosed": {
    "type": "boolean",
    "writeAccess": "serverOnly",
    "required": false
  },
  "billingCity": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "shipTo": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "clinicName": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  },
  "soldTo": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "altID": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "salesOrg": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "country": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  },
  "archived": {
    "type": "boolean",
    "writeAccess": "serverOnly",
    "required": false
  },
  "zip": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  },
  "payer": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "city": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  },
  "clinicType": {
    "type": "string",
    "writeAccess": "clientModify",
    "required": false
  },
  "billingZip": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "approvedEmails": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "companyCode": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "state": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  }
}

###

# @name groups_getSchema
POST https://accounts.{{cdc-dc}}/accounts.groups.getSchema
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

model=ClinicModel

###

# @name getSchema
GET https://accounts.{{cdc-dc}}/accounts.getSchema
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

###

# @name sendLiteInvite
POST https://accounts.{{cdc-dc}}/accounts.sendLiteInvite
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

email=testuser2@mailinator.com

###

# @name admin_getGroups
POST https://admin.{{cdc-dc}}/admin.getGroups
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

groupID=API Integration - Corra | Corsair - Dev
&partnerID=80122467

###

# @name admin_updateGroup
POST https://admin.{{cdc-dc}}/admin.updateGroup
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

groupID=API Integration - iCUE Desktop - Dev
&aclID=API Integration - iCUE Desktop - Dev
&partnerID=80122467

###

# @name admin_getEffectiveACL
POST https://admin.{{cdc-dc}}/admin.getEffectiveACL
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

groupIds=API Integration - iCUE Desktop - Dev
&partnerID=80122467

###

# @name admin_getACL
POST https://admin.{{cdc-dc}}/admin.getACL
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

partnerID=80122467
&aclID={{admin_getGroups.response.body.groups.*.aclID}}

###

# @name admin_setACL
POST https://admin.{{cdc-dc}}/admin.setACL
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

partnerID=80122467
&aclID=API Integration - iCUE Desktop - Dev
&acl={}

###

# @name groups_getGroupInfo
POST https://accounts.{{cdc-dc}}/accounts.groups.getGroupInfo
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

groupID=665211
&model=ClinicModel

###

# @name groups_createInvitation
POST https://accounts.{{cdc-dc}}/accounts.groups.createInvitation
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

model=Clinic
&groupId=Test

###

# @name importFullAccount
POST https://accounts.{{cdc-dc}}/accounts.importFullAccount
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=c2efdd60f79b4a578ae9cbef966f6384
&importPolicy=upsert
&isRegistered=false
&isVerified=false
&data={
    "eBuilderAddressCheck": null
}
&emails={
    "verified": [],
    "unverified": ["ebmigragchildauser2@mailinator.com"]
}
&loginIds={
    "username": "ebmigragchildauser2",
    "emails": [],
    "unverifiedEmails": ["ebmigragchildauser2@mailinator.com"]
}

###

# @name setPolicies
POST https://accounts.{{cdc-dc}}/accounts.setPolicies
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

passwordReset={
    tokenExpiration: 900
}
&emailVerification={
    verificationEmailExpiration: 900
}

###

# @name OTP_sendCode
POST https://accounts.{{cdc-dc}}/accounts.otp.sendCode
    ?apiKey={{cdc-api-key}}
    &userKey=ANon%2BNX45oAD
    &secret=qTUA/GoMh7ciYK3iLFzXVa3NP0JWHZY9
Content-Type: application/x-www-form-urlencoded

email=abc.test@mailinator.com
&lang=en
&sendCode=true

###

# @name OTP_update
POST https://accounts.{{cdc-dc}}/accounts.otp.update
    ?apiKey={{cdc-api-key}}
    &userKey=ANon%2BNX45oAD
    &secret=qTUA/GoMh7ciYK3iLFzXVa3NP0JWHZY9
Content-Type: application/x-www-form-urlencoded

vToken={{OTP_sendCode.response.body.vToken}}
&code={{OTP_sendCode.response.body.code}}
&UID=fb06209c01524cdf9adf087a52d60d6b

###

POST https://api.us1.b2b-gigya.com/runtime/4_kvKC1tmA3Dq4Jy2qZB6uew/authorization/token/PQEPZ9AWHXPLK1YC3ORK
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhb01aSUFkcWx5U0JLb0cwS1NNemlXWGNGaGZhMkM1QyIsImV4cCI6IjE2NTEzNTQzMTYwMDAifQ.WE8-HSuockjZ-QRS7iao4e3S8l4IOH2d6fPTYvOKBBo

{
  "identity": {
    "id": "ed1c8a55665f4908b2bbd561d52eafd1"
  },
  "context": {
    "organization": "035abb41-792c-43ad-9f84-f497720ed0a9"
  },
  "response": {
    "include_identity": false,
    "include_reasons": false,
    "include_business_models": true
  }
}

###

# @name SAML_getRegisteredSPs
POST https://fidm.{{cdc-dc}}/fidm.saml.idp.getRegisteredSPs
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

###

# @name SAML_registerSP
POST https://fidm.{{cdc-dc}}/fidm.saml.idp.registerSP
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

config={
      "name": "poccommerce",
      "entityID": "urn:ssoextension:stag:hybris:de",
      "assertionConsumerServiceURL": "https://accstorefront.cw91acdn77-fhoffmann1-s1-public.model-t.cc.commerce.ondemand.com:443/samlsinglesignon/saml/SSO",
      "singleLogoutServiceURL": "https://accstorefront.cw91acdn77-fhoffmann1-s1-public.model-t.cc.commerce.ondemand.com:443/samlsinglesignon/saml/SingleLogout",
      "singleLogoutServiceBinding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
      "authnRequestSigned": false,
      "wantAssertionSigned": false,
      "encryptAssertions": false,
      "nameIDMapping": {
        "gigyaField": "email",
        "attributeType": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
      },
      "sessionLifetime": 1440,
      "attributeMapping": [
        {
          "attributeName": "Email",
          "gigyaField": "email",
          "attributeType": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
        },
        {
          "attributeName": "LastName",
          "gigyaField": "lastName",
          "attributeType": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic"
        },
        {
          "attributeName": "FirstName",
          "gigyaField": "firstName",
          "attributeType": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic"
        },
        {
          "attributeName": "Groups",
          "gigyaField": "accountOrg.roles",
          "attributeType": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
        }
      ],
      "b2bAppId": "P86IEQ7TLXKCPY9BOO6Q",
      "idpSigningAlgorithm": "SHA256"
}

###

# @name initRegistration
POST https://accounts.{{cdc-dc}}/accounts.initRegistration
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

isLite=true

###

# @name setAccountInfo
POST https://accounts.{{cdc-dc}}/accounts.setAccountInfo
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=7d952b05dc644aeb9b8e55cd1c828995
&profile={
    "phones": [{"type": "mobile", "number": "(555) 123-4567"}]
}

###

# @name b2b_auth_getAssets
POST https://accounts.{{cdc-dc}}/accounts.b2b.auth.getAssets
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=ed1c8a55665f4908b2bbd561d52eafd1
&bpid=1995dfa71e5e44a1bab21a4d0210d889
&appId=PQEPZ9AWHXPLK1YC3ORK

###

# @name b2b_inviteMember
POST https://accounts.{{cdc-dc}}/accounts.b2b.inviteMember
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

email=dmitry.shapovalov@sap.com
&bpid=DSH_TEST
&accountOrganization={
  status: "active",
  job: "Developer"
}

###

# @name login
POST https://accounts.{{cdc-dc}}/accounts.login
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

loginID=dmitry.shapovalov@sap.com
&password=aA!123456
&include=id_token,profile

###

# @name register
POST https://accounts.{{cdc-dc}}/accounts.register
    ?apiKey={{cdc-api-key}}
    &userKey=ANon%2BNX45oAD
    &secret=qTUA/GoMh7ciYK3iLFzXVa3NP0JWHZY9
Content-Type: application/x-www-form-urlencoded

email=abc.test@mailinator.com
&password=aA!123456
&profile={
    firstName: "Senior",
    lastName: "Developer",
    skills: {
        level: "Senior"
    }
}
&finalizeRegistration=true

###

@clientContext = { clientIP: "123.4.5.6", deviceID: "00000000-00000000-01234567-89ABCDEF" }

# @name tfa_getRegisteredPhoneNumbers
POST https://accounts.{{cdc-dc}}/accounts.tfa.phone.getRegisteredPhoneNumbers
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

gigyaAssertion={{tfa_initTFA.response.body.gigyaAssertion}}

###

# @name tfa_initTFA
POST https://accounts.{{cdc-dc}}/accounts.tfa.initTFA
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

# regToken={{login.response.body.regToken}}
UID=49a97a6b2b0845118d02dbbd3db6c711
&provider=gigyaEmail
&mode=edit
&clientContext={{clientContext}}

###

# @name tfa_email_sendVerificationCode
POST https://accounts.{{cdc-dc}}/accounts.tfa.email.sendVerificationCode
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

gigyaAssertion={{tfa_initTFA.response.body.gigyaAssertion}}
&emailID={{tfa_getEmails.response.body.emails[0].id}}
&clientContext={{clientContext}}

###

# @name tfa_email_completeVerification
POST https://accounts.{{cdc-dc}}/accounts.tfa.email.completeVerification
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

code=750671
&regToken={{login.response.body.regToken}}
&gigyaAssertion={{tfa_initTFA.response.body.gigyaAssertion}}
&phvToken={{tfa_email_sendVerificationCode.response.body.phvToken}}
&clientContext={{clientContext}}

###

# @name tfa_finalizeTFA
POST https://accounts.{{cdc-dc}}/accounts.tfa.finalizeTFA
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

regToken={{login.response.body.regToken}}
&gigyaAssertion={{tfa_initTFA.response.body.gigyaAssertion}}
&providerAssertion={{tfa_email_completeVerification.response.body.providerAssertion}}
&clientContext={{clientContext}}

###

# @name finalizeRegistration
POST https://accounts.{{cdc-dc}}/accounts.finalizeRegistration
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

regToken={{login.response.body.regToken}}
&clientContext={{clientContext}}

###

# @name tfa_getEmails
POST https://accounts.{{cdc-dc}}/accounts.tfa.email.getEmails
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

gigyaAssertion={{tfa_initTFA.response.body.gigyaAssertion}}
&format=json
&clientContext={{clientContext}}

###

# @name notifyLogin
POST https://accounts.{{cdc-dc}}/accounts.notifyLogin
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

siteUID=7a95c29726a94e89bf9f68fd4aeb77e7
&sessionExpiration=8640000

###

# @name getAccountInfo
POST https://accounts.{{cdc-dc}}/accounts.getAccountInfo
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=391c0ce462ec4568aa079a975ec16d71
&include=loginIDs,emails,profile,data,preferences,groups

###

# @name setAccountInfo
POST https://accounts.{{cdc-dc}}/accounts.setAccountInfo
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=80c36ea3a66c4d319f9c97326b526a26
&profile={firstName: 'Dmitry'}

###

# @name resetPassword
POST https://accounts.{{cdc-dc}}/accounts.resetPassword
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

loginID=witold.m.rudnicki@gsk.com

###

@cdc-dc-us = us1.gigya.com
@cdc-dc-eu = eu1.gigya.com
@cdc-dc-au = au1.gigya.com
@cdc-dc-ru = ru1.gigya.com
@cdc-dc-cn = cn1.sapcdm.cn
@cdc-dc-global = global.gigya.com
