@cdc-api-key = 4_l12_raLFWp-5ZM-zEIfspA
@cdc-dc = {{cdc-dc-us}}

###

POST https://accounts.us1.gigya.com/accounts.sso.setConfig
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

url=https://dev.app.test.com/ciam/login
&childSiteOverrides=[]
&httpStatusCodes=true

###

# @name groups_setGroupInfo
POST https://accounts.{{cdc-dc}}/accounts.b2b.enableForSite
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

###

# @name groups_setGroupInfo
POST https://accounts.{{cdc-dc}}/accounts.groups.setGroupInfo
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

groupID=662692
&model=ClinicModel
&groupData={
  approvedEmails: ["test@test.com", "test1@test.com"]
}

###

# @name getJWT
POST https://accounts.{{cdc-dc}}/accounts.getJWT
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

targetUID=7a95c29726a94e89bf9f68fd4aeb77e7
&expiration=8640000

###

# @name groups_setSiteConfig
POST https://accounts.{{cdc-dc}}/accounts.groups.setSiteConfig
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

invitationPageUrl=https://test.com/invite

###

# @name notifyLogin
POST https://accounts.{{cdc-dc}}/accounts.notifyLogin
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

siteUID=7a95c29726a94e89bf9f68fd4aeb77e7
&sessionExpiration=8640000

###

# @name RBA_getPolicy
POST https://accounts.{{cdc-dc}}/accounts.rba.getPolicy
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

###

# @name RBA_setPolicy
POST https://accounts.{{cdc-dc}}/accounts.rba.setPolicy
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

policy={}

###

# @name audit_search
POST https://audit.{{cdc-dc}}/audit.search
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

query=select * from auditLog where endpoint='accounts.resetPassword' limit 10

###

# @name importLiteAccount
POST https://accounts.{{cdc-dc}}/accounts.importLiteAccount
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

profile={
    "email": "test@test.com",
    "firstName": "First",
    "lastName": "Last"
}
&preferences={
    "terms": {
        "tc": {
			"isConsentGranted": true,
			"lastConsentModified": "2022-12-01"
		}
    }
}

###

# @name accounts_search
POST https://accounts.{{cdc-dc}}/accounts.search
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

query=SELECT * FROM accounts WHERE UID='c80ae99bac0'

###

# @name tfa_getProviders
POST https://accounts.{{cdc-dc}}/accounts.tfa.getProviders
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=49a97a6b2b08

###

# @name groups_getSchema
POST https://accounts.{{cdc-dc}}/accounts.groups.getSchema
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

model=ClinicModel

###

# @name groups_setSchema
POST https://accounts.{{cdc-dc}}/accounts.groups.setSchema
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

model=ClinicModel
&relationshipDataSchema={
  "role": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "status": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "permissions": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "nickname": {
    "type": "string",
    "writeAccess": "clientModify",
    "required": false
  }
}
&groupDataSchema={
  "streetAddress": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  },
  "billTo": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "softClosed": {
    "type": "boolean",
    "writeAccess": "serverOnly",
    "required": false
  },
  "billingCity": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "shipTo": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "clinicName": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  },
  "soldTo": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "altID": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "salesOrg": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "country": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  },
  "archived": {
    "type": "boolean",
    "writeAccess": "serverOnly",
    "required": false
  },
  "zip": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  },
  "payer": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "city": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  },
  "clinicType": {
    "type": "string",
    "writeAccess": "clientModify",
    "required": false
  },
  "billingZip": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "approvedEmails": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "companyCode": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": false
  },
  "state": {
    "type": "string",
    "writeAccess": "serverOnly",
    "required": true
  }
}

###

# @name groups_getSchema
POST https://accounts.{{cdc-dc}}/accounts.groups.getSchema
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

model=ClinicModel

###

# @name getSchema
GET https://accounts.{{cdc-dc}}/accounts.getSchema
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

###

# @name sendLiteInvite
POST https://accounts.{{cdc-dc}}/accounts.sendLiteInvite
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

email=testuser2@mailinator.com

###

# @name admin_getGroups
POST https://admin.{{cdc-dc}}/admin.getGroups
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

groupID=API Integration - Dev
&partnerID=80122467

###

# @name admin_updateGroup
POST https://admin.{{cdc-dc}}/admin.updateGroup
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

groupID=API Integration - Dev
&aclID=API Integration - Dev
&partnerID=80122467

###

# @name admin_getEffectiveACL
POST https://admin.{{cdc-dc}}/admin.getEffectiveACL
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

groupIds=API Integration - Dev
&partnerID=80122467

###

# @name admin_getACL
POST https://admin.{{cdc-dc}}/admin.getACL
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

partnerID=8012XXXX
&aclID={{admin_getGroups.response.body.groups.*.aclID}}

###

# @name admin_setACL
POST https://admin.{{cdc-dc}}/admin.setACL
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

partnerID=80122467
&aclID=API Integration - Dev
&acl={}

###

# @name groups_getGroupInfo
POST https://accounts.{{cdc-dc}}/accounts.groups.getGroupInfo
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

groupID=665211
&model=ClinicModel

###

# @name groups_createInvitation
POST https://accounts.{{cdc-dc}}/accounts.groups.createInvitation
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

model=Clinic
&groupId=Test

###

# @name importFullAccount
POST https://accounts.{{cdc-dc}}/accounts.importFullAccount
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=c2efdd60f79b4a
&importPolicy=upsert
&isRegistered=false
&isVerified=false
&data={
    "eBuilderAddressCheck": null
}
&emails={
    "verified": [],
    "unverified": ["ebmigragchildauser2@mailinator.com"]
}
&loginIds={
    "username": "ebmigragchildauser2",
    "emails": [],
    "unverifiedEmails": ["ebmigragchildauser2@mailinator.com"]
}

###

# @name setPolicies
POST https://accounts.{{cdc-dc}}/accounts.setPolicies
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

passwordReset={
    tokenExpiration: 900
}
&emailVerification={
    verificationEmailExpiration: 900
}

###

# @name OTP_sendCode
POST https://accounts.{{cdc-dc}}/accounts.otp.sendCode
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

email=abc.test@mailinator.com.234234234
&lang=en
&sendCode=true

###

# @name OTP_update
POST https://accounts.{{cdc-dc}}/accounts.otp.update
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

vToken={{OTP_sendCode.response.body.vToken}}
&code={{OTP_sendCode.response.body.code}}
&UID=fb06209c01524c

###

# @name SAML_getRegisteredSPs
POST https://fidm.{{cdc-dc}}/fidm.saml.idp.getRegisteredSPs
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

###

# @name SAML_registerSP
POST https://fidm.{{cdc-dc}}/fidm.saml.idp.registerSP
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

config={
      "name": "poccommerce",
      "entityID": "urn:ssoextension:stag:hybris:de",
      "assertionConsumerServiceURL": "https://accstorefront.xyz-s1-public.model-t.cc.commerce.ondemand.com:443/samlsinglesignon/saml/SSO",
      "singleLogoutServiceURL": "https://accstorefront.xyz-s1-public.model-t.cc.commerce.ondemand.com:443/samlsinglesignon/saml/SingleLogout",
      "singleLogoutServiceBinding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
      "authnRequestSigned": false,
      "wantAssertionSigned": false,
      "encryptAssertions": false,
      "nameIDMapping": {
        "gigyaField": "email",
        "attributeType": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
      },
      "sessionLifetime": 1440,
      "attributeMapping": [
        {
          "attributeName": "Email",
          "gigyaField": "email",
          "attributeType": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
        },
        {
          "attributeName": "LastName",
          "gigyaField": "lastName",
          "attributeType": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic"
        },
        {
          "attributeName": "FirstName",
          "gigyaField": "firstName",
          "attributeType": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic"
        },
        {
          "attributeName": "Groups",
          "gigyaField": "accountOrg.roles",
          "attributeType": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
        }
      ],
      "b2bAppId": "P86IEQ7TL",
      "idpSigningAlgorithm": "SHA256"
}

###

# @name initRegistration
POST https://accounts.{{cdc-dc}}/accounts.initRegistration
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

isLite=true

###

# @name setAccountInfo
POST https://accounts.{{cdc-dc}}/accounts.setAccountInfo
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=7d952b05dc644aeb9
&profile={
    "phones": [{"type": "mobile", "number": "(555) 123-4567"}]
}

###

# @name b2b_auth_getAssets
POST https://accounts.{{cdc-dc}}/accounts.b2b.auth.getAssets
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=ed1c8a55665f4
&bpid=1995dfa71e5e4
&appId=PQEPZ9AWHX

###

# @name b2b_inviteMember
POST https://accounts.{{cdc-dc}}/accounts.b2b.inviteMember
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

email=dmitry.shapovalov@sap.com
&bpid=DSH_TEST
&accountOrganization={
  status: "active",
  job: "Developer"
}

###

# @name login
POST https://accounts.{{cdc-dc}}/accounts.login
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

loginID=dmitry.shapovalov@sap.com
&password=xyz
&include=id_token,profile

###

# @name register
POST https://accounts.{{cdc-dc}}/accounts.register
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

email=abc.test@mailinator.com
&password=aA!123456
&profile={
    firstName: "Senior",
    lastName: "Developer",
    skills: {
        level: "Senior"
    }
}
&finalizeRegistration=true

###

@clientContext = { clientIP: "123.4.5.6", deviceID: "00000000-00000000-01234567-89ABCDEF" }

# @name tfa_getRegisteredPhoneNumbers
POST https://accounts.{{cdc-dc}}/accounts.tfa.phone.getRegisteredPhoneNumbers
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

gigyaAssertion={{tfa_initTFA.response.body.gigyaAssertion}}

###

# @name tfa_initTFA
POST https://accounts.{{cdc-dc}}/accounts.tfa.initTFA
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

# regToken={{login.response.body.regToken}}
UID=49a97a6b2b08451
&provider=gigyaEmail
&mode=edit
&clientContext={{clientContext}}

###

# @name tfa_email_sendVerificationCode
POST https://accounts.{{cdc-dc}}/accounts.tfa.email.sendVerificationCode
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

gigyaAssertion={{tfa_initTFA.response.body.gigyaAssertion}}
&emailID={{tfa_getEmails.response.body.emails[0].id}}
&clientContext={{clientContext}}

###

# @name tfa_email_completeVerification
POST https://accounts.{{cdc-dc}}/accounts.tfa.email.completeVerification
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

code=750671
&regToken={{login.response.body.regToken}}
&gigyaAssertion={{tfa_initTFA.response.body.gigyaAssertion}}
&phvToken={{tfa_email_sendVerificationCode.response.body.phvToken}}
&clientContext={{clientContext}}

###

# @name tfa_finalizeTFA
POST https://accounts.{{cdc-dc}}/accounts.tfa.finalizeTFA
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

regToken={{login.response.body.regToken}}
&gigyaAssertion={{tfa_initTFA.response.body.gigyaAssertion}}
&providerAssertion={{tfa_email_completeVerification.response.body.providerAssertion}}
&clientContext={{clientContext}}

###

# @name finalizeRegistration
POST https://accounts.{{cdc-dc}}/accounts.finalizeRegistration
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

regToken={{login.response.body.regToken}}
&clientContext={{clientContext}}

###

# @name tfa_getEmails
POST https://accounts.{{cdc-dc}}/accounts.tfa.email.getEmails
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

gigyaAssertion={{tfa_initTFA.response.body.gigyaAssertion}}
&format=json
&clientContext={{clientContext}}

###

# @name getAccountInfo
POST https://accounts.{{cdc-dc}}/accounts.getAccountInfo
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=391c0ce462ec4568aa079a975ec16d71
&include=loginIDs,emails,profile,data,preferences,groups

###

# @name setAccountInfo
POST https://accounts.{{cdc-dc}}/accounts.setAccountInfo
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

UID=80c36ea3a66c4d
&profile={firstName: 'Dmitry'}

###

# @name resetPassword
POST https://accounts.{{cdc-dc}}/accounts.resetPassword
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

loginID=test@test.com

###

# @name idx_getRestrictions
POST https://idx.{{cdc-dc}}/idx.getRestrictions
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

###

# @name idx_setRestrictions
POST https://idx.{{cdc-dc}}/idx.setRestrictions
    ?apiKey={{cdc-api-key}}
    &userKey={{cdc-user-key}}
    &secret={{cdc-user-secret}}
Content-Type: application/x-www-form-urlencoded

data={
    "maxAllowedDataflow": 25,
    "minFrequency": 600,
    "fullExtractMinFrequency": 86400,
    "maxAllowedFullExtract": 10,
    "maxAllowedScheduling": 25,
    "maxAllowedDataflowVersions": 20,
    "maxAllowedDataflowDraftVersions": 20
}

###

@cdc-dc-us = us1.gigya.com
@cdc-dc-eu = eu1.gigya.com
@cdc-dc-au = au1.gigya.com
@cdc-dc-ru = ru1.gigya.com
@cdc-dc-cn = cn1.sapcdm.cn
@cdc-dc-global = global.gigya.com
